
<form id="createBucketForm" class="max-w-md mx-auto bg-white p-8 rounded-lg shadow-md">
  <!-- Bucket Name -->
  <div class="mb-4">
    <label for="bucketName" class="block text-sm font-medium text-gray-700">Bucket Name</label>
    <input type="text" id="bucketName" name="bucketName"
      class="mt-1 block w-full p-2 border border-gray-300 rounded-md shadow-sm">
  </div>

  <!-- Create Bucket Button -->
  <button type="submit" class="w-full bg-blue-500 text-white p-2 rounded-md hover:bg-blue-600">Create Bucket</button>
</form>


<script>

  document.getElementById('createBucketForm').addEventListener('submit', async (event) => {
    event.preventDefault(); // Prevent the form from submitting the traditional way

    // Get the bucket name from the form input
    const bucketName = document.getElementById('bucketName').value;

    // Retrieve data from localStorage
    const savedRegion = localStorage.getItem('region');
    const savedAccessKeyId = localStorage.getItem('accessKeyId');
    const savedSecretKey = localStorage.getItem('secretKey');

    // Validate the bucket name and localStorage data
    if (!bucketName) {
      alert('Bucket name is required.');
      return;
    }
    if (!savedRegion || !savedAccessKeyId || !savedSecretKey) {
      alert('Missing required data in localStorage. Please ensure region, accessKeyId, and secretKey are set.');
      return;
    }

    try {
      // Send a POST request to the server
      const response = await fetch('/s3/create-bucket', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          bucketName,
          region: savedRegion,
          accessKeyId: savedAccessKeyId,
          secretKey: savedSecretKey,
        }), // Include all required data in the request body
      });

      // Parse the JSON response
      const result = await response.json();

      // Handle the response
      if (response.ok) {
        alert(result.message); // Show success message
      } else {
        alert(result.error); // Show error message
      }
    } catch (error) {
      console.error('Error:', error);
      alert('An error occurred while creating the bucket.');
    }
  });
</script>